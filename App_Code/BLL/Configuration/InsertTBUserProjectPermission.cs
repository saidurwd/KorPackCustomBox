//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith.
//
//     Date:    8/19/2012
//     Time:    3:34 PM
//     Version: 5.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace Blumen
{
    #region usp_InsertTB_UserProjectPermission Wrapper
    /// <summary>
    /// This class is a wrapper for the usp_InsertTB_UserProjectPermission stored procedure.
    /// </summary>
    public class InsertTBUserProjectPermission
    {
        #region Member Variables
        protected string _connectionString = String.Empty;
        protected SqlConnection _connection = null;
        protected SqlTransaction _transaction = null;
        protected bool _ownsConnection = true;
        protected int _recordsAffected = -1;
        protected int _returnValue = 0;
        protected SqlString _userKey = SqlString.Null;
        protected bool _userKeySet = false;
        protected SqlString _projectKey = SqlString.Null;
        protected bool _projectKeySet = false;
        protected SqlString _companyID = SqlString.Null;
        protected bool _companyIDSet = false;
        #endregion

        #region Constructors
        public InsertTBUserProjectPermission()
        {
        }

        public InsertTBUserProjectPermission(string connectionString)
        {
            this.ConnectionString = connectionString;
        }

        public InsertTBUserProjectPermission(SqlConnection connection)
        {
            this.Connection = connection;
        }

        public InsertTBUserProjectPermission(SqlConnection connection, SqlTransaction transaction)
        {
            this.Connection = connection;
            this.Transaction = transaction;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// The connection string to use when executing the usp_InsertTB_UserProjectPermission stored procedure.
        /// </summary>
        public string ConnectionString
        {
            get { return _connectionString; }
            set { _connectionString = value; }
        }

        /// <summary>
        /// The connection to use when executing the usp_InsertTB_UserProjectPermission stored procedure.
        /// If this is not null, it will be used instead of creating a new connection.
        /// </summary>
        public SqlConnection Connection
        {
            get { return _connection; }
            set { _connection = value; }
        }

        /// <summary>
        /// The transaction to use when executing the usp_InsertTB_UserProjectPermission stored procedure.
        /// If this is not null, the stored procedure will be executing within the transaction.
        /// </summary>
        public SqlTransaction Transaction
        {
            get { return _transaction; }
            set { _transaction = value; }
        }

        /// <summary>
        /// Gets the return value from the usp_InsertTB_UserProjectPermission stored procedure.
        /// </summary>
        public int ReturnValue
        {
            get { return _returnValue; }
        }

        /// <summary>
        /// Gets the number of rows changed, inserted, or deleted by execution of the usp_InsertTB_UserProjectPermission stored procedure.
        /// </summary>
        public int RecordsAffected
        {
            get { return _recordsAffected; }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString UserKey
        {
            get { return _userKey; }
            set
            {
                _userKey = value;
                _userKeySet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString ProjectKey
        {
            get { return _projectKey; }
            set
            {
                _projectKey = value;
                _projectKeySet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString CompanyID
        {
            get { return _companyID; }
            set
            {
                _companyID = value;
                _companyIDSet = true;
            }
        }
        #endregion

        #region Helper Methods
        private SqlConnection GetConnection()
        {
            if (this.Connection != null)
            {
                _ownsConnection = false;
                return this.Connection;
            }
            else
            {
                System.Diagnostics.Debug.Assert(this.ConnectionString.Length != 0, "You must first set the ConnectioString property before calling an Execute method.");
                return new SqlConnection(this.ConnectionString);
            }
        }
        #endregion

        #region Execute Methods
        /// <summary>
        /// This method calls the usp_InsertTB_UserProjectPermission stored procedure.
        /// </summary>
        public virtual void Execute()
        {
            SqlCommand cmd = new SqlCommand();

            SqlConnection cn = this.GetConnection();

            try
            {
                cmd.Connection = cn;
                cmd.Transaction = this.Transaction;
                cmd.CommandText = "[dbo].[usp_InsertTB_UserProjectPermission]";
                cmd.CommandType = CommandType.StoredProcedure;

                #region Populate Parameters
                SqlParameter prmReturnValue = cmd.Parameters.Add("@RETURN_VALUE", SqlDbType.Int);
                prmReturnValue.Direction = ParameterDirection.ReturnValue;

                SqlParameter prmUserKey = cmd.Parameters.Add("@UserKey", SqlDbType.NVarChar);
                prmUserKey.Direction = ParameterDirection.Input;
                prmUserKey.Size = -1;
                if (_userKeySet == true || this.UserKey.IsNull == false)
                {
                    prmUserKey.Value = this.UserKey;
                }

                SqlParameter prmProjectKey = cmd.Parameters.Add("@ProjectKey", SqlDbType.NVarChar);
                prmProjectKey.Direction = ParameterDirection.Input;
                prmProjectKey.Size = -1;
                if (_projectKeySet == true || this.ProjectKey.IsNull == false)
                {
                    prmProjectKey.Value = this.ProjectKey;
                }

                SqlParameter prmCompanyID = cmd.Parameters.Add("@CompanyID", SqlDbType.Char);
                prmCompanyID.Direction = ParameterDirection.Input;
                prmCompanyID.Size = 4;
                if (_companyIDSet == true || this.CompanyID.IsNull == false)
                {
                    prmCompanyID.Value = this.CompanyID;
                }
                #endregion

                #region Execute Command
                if (cn.State != ConnectionState.Open) cn.Open();
                _recordsAffected = cmd.ExecuteNonQuery();
                #endregion

                #region Get Output Parameters
                if (prmReturnValue.Value != null && prmReturnValue.Value != DBNull.Value)
                {
                    _returnValue = (int)prmReturnValue.Value;
                }

                #endregion
            }
            finally
            {
                if (_ownsConnection)
                {
                    if (cn.State == ConnectionState.Open)
                    {
                        cn.Close();
                    }

                    cn.Dispose();
                }
                cmd.Dispose();
            }
        }

        /// <summary>
        /// This method calls the usp_InsertTB_UserProjectPermission stored procedure.
        /// </summary>
        /// <param name="connectionString">The connection string to use</param>
        /// <param name="userKey"></param>
        /// <param name="projectKey"></param>
        /// <param name="companyID"></param>
        public static void Execute(
        #region Parameters
string connectionString,
                SqlString userKey,
                SqlString projectKey,
                SqlString companyID
        #endregion
)
        {
            InsertTBUserProjectPermission insertTBUserProjectPermission = new InsertTBUserProjectPermission();

            #region Assign Property Values
            insertTBUserProjectPermission.ConnectionString = connectionString;
            insertTBUserProjectPermission.UserKey = userKey;
            insertTBUserProjectPermission.ProjectKey = projectKey;
            insertTBUserProjectPermission.CompanyID = companyID;
            #endregion

            insertTBUserProjectPermission.Execute();

            #region Get Property Values

            #endregion
        }
        #endregion
    }
    #endregion
}
